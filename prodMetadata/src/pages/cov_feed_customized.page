<apex:page showHeader="false" sidebar="false" controller="cov_feed_controller">
	<chatter:newsfeed />

<!-- TODO: consolidate code between this component and cov_feed_customized.page so it's not duplicated -->

    	<style type="text/css">

    		.feedphoto-replaced {
    			max-width: 100%;
                max-height: 480px;
    		}

    	</style>

        <script type="text/javascript">

        var getUrlParamsAsArrayFromString = function getUrlParamsAsArrayFromString(URLString) {
                var vars = [], hash;
                    var q = URLString.split('?')[1];
                    if(q != undefined){
                        q = q.split('&');
                        for(var i = 0; i < q.length; i++){
                            hash = q[i].split('=');
                            // vars.push(hash[1]);
                            vars[hash[0]] = hash[1];
                        }
                }
                return vars;
        };

            var j$ = jQuery.noConflict();

            // j$(document).ready(function()    {
				var hashtable = {};

                <apex:outputPanel layout="none" rendered="{!showBigPhotosInFeed}">
    				<apex:repeat value="{!imageIdToLargeImageMap}" var="imgId">
    					hashtable['{!imgId}'] = '{!imageIdToLargeImageMap[imgId]}';
    					hashtable['{!left(imgId, 15)}'] = '{!imageIdToLargeImageMap[imgId]}';
    				</apex:repeat>
                </apex:outputPanel>
                <apex:outputPanel layout="none" rendered="{!showBigPhotosOnEventLinkPosts}">
                    <apex:repeat value="{!eventIdToLargeImageMap}" var="evId">
                        hashtable['{!evId}'] = '{!$Site.currentSiteUrl}{!eventIdToLargeImageMap[evId]}';
                        hashtable['{!left(evId, 15)}'] = '{!$Site.currentSiteUrl}{!eventIdToLargeImageMap[evId]}';
                    </apex:repeat>
                </apex:outputPanel>

                <apex:outputPanel layout="none" rendered="{!showBigPhotosInFeed}">                
                    j$(".contentThumbnail").each(function(i){
                        var hashKey;
                        var replaceTarget;
                        if (j$(this).closest('.feeditemcommentbody').length > 0) {
                            var theCommentImageUrl = j$(this).prop('src');
                            hashKey = theCommentImageUrl == undefined ? null 
                                : getUrlParamsAsArrayFromString(theCommentImageUrl)['versionId'];
                            replaceTarget = '.contentPost';
                        } else {
                            hashKey = j$(this).closest(".cxfeeditem").attr('id');
                            replaceTarget = '.cxfeeditemattachments';
                        }
                        if (hashtable[hashKey] != null) {
                            var thumbCell = j$(this).closest(".thumbnailCell").clone();
                            thumbCell.find('img.contentThumbnail').replaceWith(j$('<img src="' + hashtable[hashKey] + '" class=" feedphoto-replaced" />'));
                            j$(this).closest(replaceTarget).html(thumbCell.html());
                    	}
                    });
                </apex:outputPanel>

                <apex:outputPanel layout="none" rendered="{!showBigPhotosOnEventLinkPosts}">
                    j$(".linkPostLink").each(function(i){
                        if (j$(this).attr('href').indexOf('cov_event?id=') >= 0) {
                            var href =  j$(this).attr('href');
                            var eventId = getUrlParamsAsArrayFromString(href)['id'];
                            if (hashtable[eventId] != null) {
                                if (j$(this).closest('.LinkPostAuxBody').length > 0) {
                                    var newDiv = '<div class="feedphoto-div"><a href="' + href + '"><img src="' + hashtable[eventId] + '" class="feedphoto-replaced" /></a></div>';
                                    j$(this).closest(".LinkPostAuxBody").append(newDiv);
                                }
                            }
                        }
                    });
                </apex:outputPanel>


                <apex:outputPanel rendered="{!inEveryoneGroup}" layout="none">

                    var simulateEvent = function simulateEvent(selector, evnt){
                        var j$el = j$(selector);
                        var offset = j$el.offset();
                        var event = jQuery.Event( evnt, {
                          which: 1,
                          pageX: offset.left,
                          pageY: offset.top
                        });
                        j$el.trigger(event);
                    }

                    j$('.publishercontainer').mousedown(function() {
                        if (!j$('.publishercontainer').data('clicked')) {
                            setTimeout(function() {
                                if (j$('.publishercontainer .bottomBar').css('height') != '0px') {
                                    j$('.publishercontainer').data('clicked', true);
                                    j$('.postToGroup').closest('li').click();
                                    setTimeout(function() {
                                        j$('.postToGroup').click();
                                        setTimeout(function() {
                                            j$('#publisherGroupSelectionInput').val('Everyone');
                                            setTimeout(function() {
                                                simulateEvent('#publisherGroupSelectionInput', 'focus');
                                                triggerWhenExists('.autoCompleteSelectedRow[title^=Everyone]', 'mousedown', 100, 30);
                                            }, 100);
                                        }, 100);
                                    }, 100);
                                }
                            }, 100);
                        }
                    });

                    var triggerWhenExists = function triggerWhenExists(selector, evnt, interval, limit) {
                        var count = 1;
                        var checkExist = setInterval(function() {
                            if (j$(selector).length) {
                                j$(selector).trigger(evnt);
                                if ({!isMobile}) {
                                    j$("body").scrollTop(j$(".publishercontainer").first().offset().top - 100);
                                    j$("body").scrollLeft(0);
                                    // j$('html, body').animate({
                                    //     scrollTop: j$(".publishercontainer").first().offset().top - 100
                                    //     , scrollLeft: 0
                                    // }, 200);
                                }
                                if (j$('#cke_publisherRichTextEditor').length) {
                                    setTimeout(function() {
                                        CKEDITOR.instances.publisherRichTextEditor.focus();
                                    }, 1000);
                                    clearInterval(checkExist);
                                } else if (j$('#publishereditablearea').length) {
                                    j$('#publishereditablearea').focus();
                                    exitFlag = true;
                                    clearInterval(checkExist);
                                }
                            }
                            count++;
                            if (count > limit) {
                                console.log('didnt find the group');
                                clearInterval(checkExist);
                            }
                        }, interval); // in ms
                    }
                </apex:outputPanel>


        </script>

    <!-- </apex:outputPanel> -->


</apex:page>